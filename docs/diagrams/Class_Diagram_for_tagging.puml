@startuml
title FitChasers â€“ Core Classes (UML Class Diagram)

skinparam shadowing false
skinparam classAttributeIconSize 0
skinparam ArrowColor #444
skinparam ClassBorderColor #222
skinparam ClassBackgroundColor #FAFAFA
skinparam NoteBackgroundColor #fff
skinparam NoteBorderColor #aaa

hide circle

' ===== Classes & Interfaces =====
class WorkoutManager {
  -workouts: ArrayList<Workout>
  -currentWorkout: Workout
  -tagger: Tagger
  --
  +addWorkout(command: String): void
  +overrideWorkoutTags(workout: Workout, newTag: String): void
}

class Tagger <<interface>> {
  +suggest(w: Workout): Set<String>
}

class DefaultTagger {
  -modalityKeywords: EnumMap<Modality, Set<String>>
  -muscleKeywords: EnumMap<MuscleGroup, Set<String>>
  --
  +DefaultTagger()
  +suggest(w: Workout): Set<String>
  +addModalityKeyword(modality: Modality, keyword: String): void
  +addMuscleKeyword(muscle: MuscleGroup, keyword: String): void
}

class Workout {
  -workoutName: String
  -duration: int
  -workoutStartDateTime: LocalDateTime
  -workoutEndDateTime: LocalDateTime
  -exercises: ArrayList<Exercise>
  -manualTags: Set<String>
  -autoTags: Set<String>
  --
  +setManualTags(tags: Set<String>): void
  +setAutoTags(tags: Set<String>): void
  +getAllTags(): Set<String>
  +getWorkoutName(): String
}

class Exercise {
  -name: String
  -sets: ArrayList<Integer>
  --
  +addSet(reps: int): void
  +getName(): String
}

class Modality <<enum>> {
  CARDIO
  STRENGTH
}

class MuscleGroup <<enum>> {
  LEGS
  CHEST
  BACK
  SHOULDERS
  ARMS
  CORE
  POSTERIOR_CHAIN
}

' ===== Relationships =====
WorkoutManager "1" *-- "0..*" Workout : manages
WorkoutManager --> Tagger : uses
DefaultTagger --|> Tagger
Workout "1" o-- "0..*" Exercise : contains
Workout ..> Modality : tagged with
Workout ..> MuscleGroup : tagged with
DefaultTagger ..> Modality : reference
DefaultTagger ..> MuscleGroup : reference

@enduml
